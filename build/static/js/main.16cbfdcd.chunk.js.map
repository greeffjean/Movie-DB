{"version":3,"sources":["js/logo.svg","js/SearchBar.js","js/FilmItem.js","js/Filmdatabase.js","js/FilmInfo.js","js/App.js","js/serviceWorker.js","index.js"],"names":["module","exports","SearchBar","props","state","inputField","typingTimeout","inputFieldRef","React","createRef","event","disable_list","self","this","e","target","value","clearTimeout","setState","setTimeout","length","onChange","current","className","ref","defaultValue","placeholder","handleInputChange","Component","FilmItem","onClick","info","title","Filmdatabase","search","term","fetch","headers","Authorization","then","response","json","generateGenreString","generateLanguageStrings","FilmInfo","film_language","main_banner","poster_image","film_title","adult","film_detailed_description","film_genre","film_genre_descriprion","film_release","vote_count","vote","languages","map","value1","iso_639_1","original_language","push","english_name","genre_ids","genres","value2","id","name","clearSearch","backdrop_path","poster_path","original_title","overview","release_date","vote_average","film_list","retrieveFilmData","key","src","display_film_list","style","fontFamily","background","backgroundSize","App","activate_film_list","searchBarRef","bind","disable","activate_list","jsonResponse","results","settingData","clearInputValue","changeBackground","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16cbfdcd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport '../css/SearchBar.css';\n\n\n\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputField: [],\n      typingTimeout: 0\n    }\n    this.inputFieldRef = React.createRef();\n  }\n\n\n\n  /* Handle Input Change */\n  handleInputChange(event) {\n    /* disable list FilmInfo.js*/\n    var disable_list = null;\n    /*( call search render smoothly )*/\n    const self = this;\n    const e = event.target.value;\n    if (self.state.typingTimeout) {\n      clearTimeout(self.state.typingTimeout);\n    }\n    self.setState({\n      typingTimeout: setTimeout(function () {\n        if (e.length == 0) {\n          disable_list = true;\n        }\n          self.props.onChange(e, disable_list);\n          self.setState({ inputField: e })\n      }, 200)\n    });\n\n\n\n  }\n\n  /* Clear Input Value */\n  clearInputValue() {\n    this.inputFieldRef.current.value = '';\n  }\n\n  /* Render */\n  render() {\n    return (\n      <div className=\"search_bar_wrapper\">\n        <div className=\"input_field\"> <input\n          ref={this.inputFieldRef}\n          defaultValue={this.inputField}\n          placeholder=\"Search Movie Title...\"\n          onChange={(e) => this.handleInputChange(e)}></input>\n        </div>\n      </div>\n\n\n\n    );\n  }\n\n\n}\n\nexport default SearchBar;","import React from 'react';\nimport \"../css/FilmItem.css\";\n\n\n\nclass FilmItem extends React.Component {\n  /* Onclick Fetch Data */\n  onClick() {\n    this.props.onClick(this.props.info);\n  }\n\n\n  render() {\n    return (\n      <div  onClick={(e) => this.onClick()} className=\"film_item_wrapper\">\n        <div className=\"film_item\"> <a> {this.props.title} </a> </div>\n      </div>\n    );\n  }\n\n\n}\n\nexport default FilmItem;","\n/*Search Film Database*/\nconst Filmdatabase = {\n    search(term) {\n        const api_Key = 'd52d352bec334444651872872e2946e1';\n      const access_Token = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNTJkMzUyYmVjMzM0NDQ0NjUxODcyODcyZTI5NDZlMSIsInN1YiI6IjVkY2E2NjFlOTkyNTljNjdiMjdkYTIxYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.dcLZDhOtiDoPe-DdjCCH_0T57JnY2Vo3-KRG3DMy1aY';\n        return fetch(`https://api.themoviedb.org/3/search/movie?api_key=${api_Key}&query=${term}` ,{\n          headers: {\n              Authorization: `Bearer ${access_Token}`\n            }\n      }).then(response => {\n          return response.json();\n      })\n      },\n\n      /*Search Genre*/\n      generateGenreString(){\n        const api_Key = 'd52d352bec334444651872872e2946e1';\n        const access_Token = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNTJkMzUyYmVjMzM0NDQ0NjUxODcyODcyZTI5NDZlMSIsInN1YiI6IjVkY2E2NjFlOTkyNTljNjdiMjdkYTIxYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.dcLZDhOtiDoPe-DdjCCH_0T57JnY2Vo3-KRG3DMy1aY';\n          return fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${api_Key}&language=en-US` ,{\n            headers: {\n                Authorization: `Bearer ${access_Token}`\n              }\n        }).then(response => {\n            return response.json();\n        })\n      },\n\n      /*Search Language*/\n      generateLanguageStrings(){\n        const api_Key = 'd52d352bec334444651872872e2946e1';\n        const access_Token = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNTJkMzUyYmVjMzM0NDQ0NjUxODcyODcyZTI5NDZlMSIsInN1YiI6IjVkY2E2NjFlOTkyNTljNjdiMjdkYTIxYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.dcLZDhOtiDoPe-DdjCCH_0T57JnY2Vo3-KRG3DMy1aY';\n          return fetch(`https://api.themoviedb.org/3/configuration/languages?api_key=${api_Key}` ,{\n            headers: {\n                Authorization: `Bearer ${access_Token}`\n              }\n        }).then(response => {\n            return response.json();\n        })\n\n      }\n}\n\n\n\nexport default Filmdatabase","import React from 'react';\nimport FilmItem from \"./FilmItem\"\nimport Filmdatabase from './Filmdatabase';\nimport '../css/FilmInfo.css';\n\n\n\n\nclass FilmInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            /* defualt information display */\n            film_language: \"English\",\n            main_banner: 'http://www.warnerbros.it/blog2/wp-content/uploads/2014/10/FL-17686.jpg',\n            poster_image: 'http://fo4mw16y1z42edr6j2m4n6vt.wpengine.netdna-cdn.com/wp-content/uploads/interstellar-imaxv11.jpg',\n            film_title: 'INTERSTELLAR',\n            adult: 'true',\n            film_detailed_description: 'Interstellar chronicles the adventures of a group of explorers who make use of a newly discovered wormhole to surpass the limitations on human space travel and conquer the vast distances involved in an interstellar voyage.',\n            film_genre: 'Adventure, Drama, Science Fiction',\n            film_genre_descriprion: 'Legendary Entertainment, Syncopy, Lynda Obst Productions',\n            film_release: '2014-11-05',\n            vote_count: '24456',\n            vote: '8.3 / 10',\n        }\n    }\n\n\n\n    /*Film List Change*/\n    retrieveFilmData(info) {\n        /* storing new data  */\n        var film_genre = [];\n        var languages = [];\n        /* genreating language string*/\n        Filmdatabase.generateLanguageStrings().then(response => {\n             response.map(value1 => {\n                if (value1.iso_639_1 === info.original_language) {\n                   languages.push(value1.english_name)\n                }\n            })\n             /* genreating genre string*/\n            Filmdatabase.generateGenreString().then(response => {\n                info.genre_ids.map(value => {\n                    response.genres.map(value2 => {\n                        if(value == value2.id){\n                            film_genre.push(`${value2.name}  `)\n                        }\n                    })\n                    })\n                    /* clearing search */\n                    this.props.clearSearch();\n                     /* returning new data */\n                    return this.setState({\n                        film_language: languages,\n                        film_genre: film_genre,\n                        main_banner: \"https://image.tmdb.org/t/p/original\" + info.backdrop_path,\n                        poster_image: \"https://image.tmdb.org/t/p/w500\" + info.poster_path,\n                        adult: \"\" + info.adult + \"\",\n                        film_title: info.original_title,\n                        film_detailed_description: info.overview,\n                        film_release: info.release_date,\n                        vote_count: info.vote_count,\n                        vote: info.vote_average\n                    })\n                })\n        })\n    }\n\n\n\n\n\n    render() {\n\n        /* Render Film Data Into DOM */\n        var film_list = [];\n        if (typeof this.props.film_list != 'undefined') {\n            if (this.props.film_list.length > 0) {\n                this.props.film_list.map(value => {\n                    film_list.push(< FilmItem\n                        onClick={(info) => this.retrieveFilmData(info)}\n                        info={value} key={value.id}\n                        title={value.original_title} />);\n                })\n            }\n        }\n\n        return (\n\n            <div className=\"film_info_wrapper\">\n\n                {/*Film Ineer Wrapper*/}\n                <div className=\"film_info_inner_wrapper\">\n\n                    {/*Film Ineer Wrapper Left*/}\n                    <div className=\"film_info_inner_wrapper_left\">\n                        <img className=\"film_image\" src={this.state.poster_image} />\n                    </div>\n\n                    {/*Film Inner Wrapper Right*/}\n                    <div className=\"film_info_inner_wrapper_right\">\n                        <div className={this.props.display_film_list == true ? \"film_list active\" : \"film_list\"}>\n                            {film_list}\n                        </div>\n\n                        {/*Film Introduction*/}\n                        <div className=\"film_introduction\">\n                            <p className=\"film_introduction_title\" style={{ fontFamily: \"Lato\" }} > {this.state.film_title} </p>\n\n                            <p className=\"film_introduction_story\" style={{ fontFamily: \"Oswald\" }} > {this.state.film_detailed_description} </p>\n\n                        </div>\n\n                        {/*Film Information*/}\n                        <div className=\"film_information\">\n                            <div id=\"film_genre\"> <h2 style={{ fontFamily: \"Oswald\" }}>Genre:</h2> <h4 style={{ fontFamily: \"Oswald\" }}>{this.state.film_genre}</h4> </div>\n                            <div className=\"film_information_addittional_row1\">\n                                <div className=\"row1_item1\">\n                                    <p style={{ fontFamily: \"Lato\" }}>Original Release:</p>\n                                    <h2 style={{ fontFamily: \"Oswald\" }} className=\"aqua\">{this.state.film_release}</h2>\n                                </div>\n                                <div className=\"row1_item2\">\n                                    <p style={{ fontFamily: \"Lato\" }}>Adult:</p>\n                                    <h2 style={{ fontFamily: \"Oswald\" }} className=\"aqua\">{this.state.adult}</h2>\n                                </div>\n                            </div>\n                            <div className=\"film_information_addittional_row2\">\n                                <div className=\"row2_item1\"> \n                                <p style={{ fontFamily: \"Lato\" }}>Original Language:</p> \n                                <h2 style={{ fontFamily: \"Oswald\" }} className=\"aqua\">{this.state.film_language}</h2> \n                                </div>\n                                <div className=\"row2_item2\">\n                                     <p style={{ fontFamily: \"Lato\" }}>Vote Average:</p>\n                                      <h2 style={{ fontFamily: \"Oswald\" }} className=\"aqua\">{this.state.vote}</h2>\n                                       </div>\n\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n                {/* Background Tint */}\n                <div style={{ background: `url(\"${this.state.main_banner}\") no-repeat`, backgroundSize: \"cover\" }} className=\"background\"> <div className=\"background_tint\"></div> </div>\n            </div>\n\n\n\n        );\n    }\n\n\n}\n\nexport default FilmInfo;\n","import React from 'react';\nimport logo from './logo.svg';\nimport SearchBar from './SearchBar';\nimport FilmInfo from './FilmInfo';\nimport Filmdatabase from './Filmdatabase';\nimport '../css/App.css';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      film_list: [],\n      activate_film_list: false,\n    }\n\n    /* Componenet Refs */\n    this.searchBarRef = React.createRef();\n    this.search = this.search.bind(this);\n  }\n\n\n  /* Search Film Database */\n  search(term, disable) {\n    /* disable film list if input is empty */\n    if (disable == true) {\n      return this.clearSearch()\n    }\n    /* state variables */\n    var film_list = [];\n    var activate_film_list = [];\n    var activate_list = [];\n    /* search function */\n    if (term.length > 0) {\n      Filmdatabase.search(term).then(jsonResponse => {\n        if (typeof jsonResponse.results != 'undefined') {\n          if (jsonResponse.results.length > 0) {\n            film_list = jsonResponse.results;\n            activate_film_list = true;\n            activate_list = true;\n          }\n          else {\n            film_list = [];\n            activate_film_list = false;\n          }\n        }\n        /* set State function */\n        return this.settingData(film_list, activate_film_list, activate_list)\n      })\n    }\n\n  }\n\n\n  /* Clear Search */\n  clearSearch() {\n    this.searchBarRef.current.clearInputValue();\n    this.setState({\n      activate_film_list: false,\n    })\n  }\n\n  settingData(film_list, activate_film_list, activate_list) {\n    this.setState({\n      film_list: film_list,\n      activate_film_list: activate_film_list,\n      activate_list: activate_list,\n    })\n  }\n\n\n  /* Render */\n  render() {\n    return (\n      <div className=\"main_content_wrapper\" >\n\n        <div className=\"main_content_wrapper_overlay\">\n          <div className=\"content_wrapper\">\n\n            {/* (Top Row) */}\n            <div className=\"content_top_row\">\n              <div className=\"logo\"> <p className=\"logo_words\">POWERED BY</p><p className=\"logo_words bold_word\">THE MOVIE DB</p> </div>\n              < SearchBar\n                ref={this.searchBarRef}\n                onChange={(term, disable) => this.search(term, disable)} />\n            </div>\n\n            {/* (Bottom Row) */}\n            <div className=\"content_bottom_row\">\n              < FilmInfo\n                changeBackground={(event) => this.changeBackground(event)}\n                /* (Componenet functions) */\n                clearSearch={(event) => this.clearSearch(event)}\n                display_film_list={this.state.activate_film_list}\n                /* (Componenet Info) */\n                film_list={this.state.film_list} />\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    );\n  }\n\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './js/App';\nimport $ from \"jquery\";\nimport * as serviceWorker from './js/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change \n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA websiteaddress - moviedb2020.surge.sh\nserviceWorker.unregister();\n\n"],"sourceRoot":""}